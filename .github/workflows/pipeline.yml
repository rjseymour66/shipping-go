name: CI Checks

on:
  push:
    branches:
      - main      # CI Checks runs only on pushes to main
    #paths:
     # - ch1/**    # only runs on changes to ch1 directory
jobs:
  test:
    name: Test Application
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.16
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Run Test
      run: make test
    - name: Coverage Check
      run: make coverage
    - name: Generate Report
      run: make report
    - name: Copy Files
      run: |
           mkdir reports
           cp cover.html reports/.
    - name: Archive
      uses: actions/upload-artifact@v2
      with:
          name: reports
          path: reports
  build:
    name: Build App
    runs-on: ubuntu-latest        # run on linux-based machine
    steps:

    - name: Set up Go 1.x         # ensure that our image has Go 1.19
      uses: actions/setup-go@v2
      with:
        go-version: ^1.19
    
    - name: Check out code into the Go module directory  # pull code from local repo
      uses: actions/checkout@v2

    - name: Build                 # build binary with make target
      run: make build

    - name: Copy Files            # copy the binary to artifacts directory
      run: |
           mkdir artifacts
           cp api artifacts/.

    - name: Archive               # create an archive to attach to the binary workflow
      uses: actions/upload-artifact@v2
      with:
          name: api               # name the binary directory something that you can identify
          path: artifacts
  deliver:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    steps:

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download binary                           # download binary from build step
      uses: actions/download-artifact@v2
      with:
          name: api

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}   # GH provided token for auth to update your repo
      with:
        tag_name: ${{ github.ref }}               # tag release using ref that triggered the build
        release_name: Release ${{ github.ref }}       # name release using ref that triggered the build
        body: |
            Still in experimentation phase
        draft: true                                   # not final so customers won't see this
        prerelease: true                              # mark as prerelease

    - name: Upload Release Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN:
          ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url:
          ${{ steps.create_release.outputs.upload_url }}
      asset_path: api
      asset_name: api
      asset_content_type: application/octet-stream  # Content type is a binary, but need to look this up.